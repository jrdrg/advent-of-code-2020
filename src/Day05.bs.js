// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var inputStr = "FFFBBBFRRR";

var inputs = "FFBBBFBLRL\nBFFFBFBRRR\nBFFFBFBLRL\nBFFBFBBLRR\nBBFFBFFRLL\nBFFFBFBRLR\nFFFFBBBRLR\nBBFFFBBRRR\nBBFBFBBRRR\nBFFBBBFLRR\nFFBBFBBRLR\nBBFFBFFLLL\nBFFFBFBLLR\nFBBFFBFLRR\nFBBFBBFRRL\nBFFBBBBRRR\nBFBBBBFLLL\nBFFBFBFLRR\nFBBFFBFRRR\nFFBFBFBLRL\nBFFFFBFLRR\nFBBFFFFLRR\nBFFFBBBLLL\nBFBFFFBRLL\nFFBBBBBRLL\nFFBBFFBLLR\nFBFFBBFLRL\nFFBFFBBRRL\nBFBBBBFLLR\nBFFFFBFRRL\nBFFBFFFLLL\nFBFFFBFLRL\nFBBBFFFLLL\nFFBFBBFRLR\nFBBBFBFRRL\nBFBBBFBLLL\nFBFFFBFLRR\nFBFBFFBLRR\nBFFFFBFLRL\nFBFBFFFRRL\nFBBFBFBLRL\nFBBFFBFLLL\nFBFBBBBRRR\nFBBBBBFLRR\nFBBBFBBLLR\nFFFBFBFRLL\nFFFBBFFLRR\nBFBBFFBRRL\nFFBFBFBRRL\nFBFBBBBLRR\nBFFBBFFLLL\nFFFBFBBRRL\nBFBBFFFLRR\nFBFBFBFLRL\nBFBFFBFLLL\nFBBBFBFRLR\nFBBBFBFLLL\nBFBFFFBLRR\nBFFBFBFLRL\nBFBBFFFRRR\nFFFBFFFRLR\nFFFBBBBRLL\nFFBBBBBLLL\nBFBBBFBRLL\nFFFBBBFLLR\nBBFFFFFRRL\nFBFBBFFRLL\nBFFBFBFRLR\nFBFBBFFRRL\nFBFBBFFLLL\nFBFBBBBRLL\nFBBFFBFLRL\nBFFBFBBRRL\nFBBFBFBRRL\nFFFBBFBLRR\nBFFBBBFRLL\nFBFFFFFRRR\nBFFFFBBLRR\nFBBFFFBRRL\nFBBBBBBRRR\nFFFBBFFLLR\nBBFBFFFRRL\nBBFFFFBRRL\nFBBBFBFLRL\nFFBFBBFRRR\nFFBBBFFLRL\nBFFBFFFLRL\nBFBFBFBRRR\nBFBBFFBRLL\nBFFFFBBLLR\nFBBBFBBLRR\nBFFBFFFLRR\nBFFFBFBLLL\nFBBBBBFRRR\nBFFBFBFLLL\nFBFFBFFRRL\nBFBBFBBRRR\nFBFFFBFRRL\nBFBBBFBLLR\nBFBBBBBRRR\nFFFBFBFRRL\nBFFFBFFLLL\nBFFFFFFLRR\nFFBBFFFRLL\nBFFBFFFRRR\nBBFFBBFLRL\nFBFBBBBLLR\nFFFBFFBLRL\nFFBBBBBRLR\nFBFFBFFRRR\nBFBBFBBRLR\nFBFBBBBLRL\nBFBBFFFLLR\nFBBBFBBLRL\nBFFBBBFLLR\nFFFBBBBRRR\nBBFBFFFLRL\nFBFBBFFLLR\nBBFFFFBLRR\nFFBBFFBRRR\nFFBBBFBRLL\nBFFFFBFLLL\nBBFFBFBRLR\nFBFBBFBRRL\nFFFBBBFRRR\nFBBBFBBRRL\nFFFBFBBRRR\nFBFFBBBRLL\nFFBFBBBRLR\nBFFFBBBRLL\nFBBFBBBRLL\nFBBBBBBLLR\nFBFBBFBLRR\nBFBFBFBLRL\nFFFBFFBRLR\nBFFFFFFRLL\nBFFBFBBLRL\nFBFFBFFLRR\nFBFBBBBRLR\nBBFFFBBLRL\nFBBBFBBRRR\nBBFBFBFRRR\nFBFBFFFLRR\nBBFBFFBLLL\nFBBBFFFLLR\nBFBFFBFRRL\nBFBBBBFRLL\nFFBFBFFLRL\nFBBBBFBLRR\nFBBBBFFLLR\nFFBBFFBLLL\nFBFFFBBRRR\nFFBBBBFLLR\nBFBFBFFRRL\nFFBBBBBLRR\nBFFFFFFRRL\nBBFBFFFLRR\nBFFBFBFRRL\nBBFFBBBRRR\nBBFFBFFLRL\nFFFBFFBRRR\nBFBFBBFRLR\nBBFBFBBLRR\nBFBBBBBRLL\nFBBBFFBRRL\nFBBBBBBRLL\nFBBFBBFRLR\nFBBFFFFRRL\nBFBFFBFRRR\nBFBBFFFLLL\nFBFFBFFLLR\nBFBBBFBLRR\nBFFBBBBRLL\nFBBBBBBLRR\nFFBFFBFRRL\nBBFFFBBRLL\nFBFFFBBRLL\nFFBBFFFLRL\nBFBBBBFRRL\nFFBFFBBRRR\nBFFBBFBRLL\nFFBFFFBLLR\nFFBFFFFLLL\nFBBBBBFLLR\nFBFBFBBLLR\nFBFBBFBRRR\nBFBFFFFLRR\nBFBBFFBRRR\nFBFBFFFRRR\nFFBFBBBRLL\nBFBBBFBRRL\nBFFBBBFLRL\nBBFBFFFRLR\nBBFBBFFLRR\nFBBFFBBRRL\nFBFBBBFLRL\nFFBFBBFRRL\nBFBFFBFLRL\nBFFFBFFRLR\nBBFBBFFRLR\nFFBFBFBLLL\nBFBFFBBRRR\nBBFFBBBRRL\nFBBBFBBLLL\nFFFBFFFLRL\nBBFFBFBLLL\nBFBBFFFRLR\nFBBBBFBLRL\nBFBFBBBLRL\nFFFBFBFRLR\nFBFFFFBRRL\nBFFBBFFLLR\nFBFFFFFRRL\nFBBFFBFRLR\nFBBBFBBRLL\nFBFFFFFLLR\nBFBFBBBLLR\nFFBBBBBRRR\nBFFFBBFLLR\nFBFBBFBLLL\nFBBFFFFLLR\nFBFFFFBLRL\nFBBBFBBRLR\nFBBFBBFLRR\nFBBBBBBRRL\nBBFBFBFLRL\nFFBBBBFRRL\nBFBBFBFLRL\nBFFFFFFRRR\nBBFBFBBLRL\nBFBFFFFRLL\nBBFFBFBRRR\nBFBFFBBLLR\nFBFBFFBRRL\nFFBBFBFLLL\nBFBFBBBRLR\nFFBBFBFLRL\nBBFFFFFRRR\nFBFFFFFLRL\nFFBFBFBRLL\nBBFFFFFLRR\nBBFFFBBRLR\nFBFBBFBRLR\nFBBBBBFLRL\nFBBFFFBLRR\nFFFBBFBLLL\nBBFBFFBRLL\nFFBFBFBLLR\nBFBBFBBRRL\nBFFBFFBLLL\nBBFFBFFRLR\nBBFFBBFLLR\nBFFFFFBLRL\nFBBFFFBLLL\nFBFFFFBLLR\nFBBFBFFRRL\nBFBBBFFRRL\nBBFFFBFLRL\nFBFBFBFLLR\nFBFFFBBRLR\nBBFFBFBRLL\nBBFFBFFRRL\nBBFFBBFRLR\nFBFFBFBRLL\nBFBFBBFRRR\nBFBBFBBLRL\nFFBBFFBRLL\nFBFFBFBRLR\nBBFBFBBLLR\nBFBBBFFRLL\nFFBFFBFLLL\nBFBFFBFRLR\nBFFFBBFLRL\nBFFFBBBLRL\nBFBBBFFLLR\nFBBFBBFRRR\nBFFBFFBRRL\nBFBFFBBRRL\nBFBBFBFRLL\nFBBFFBFRLL\nFFBBBBFRLL\nFBBBFFBRLL\nBBFFBFBLRL\nBBFFFFFLLL\nBBFFFFBRRR\nFBBBBFBRLR\nBFFBFFBRRR\nFFBFBFFRLL\nFFFFBBFRRR\nBBFBBFFLRL\nFFFBBBFLRR\nBFFBFBBLLL\nBFBBFFFLRL\nBFFBFFFRLL\nBFBFFBBRLL\nFFBBBBFLLL\nBFFBFBBRRR\nBFBBBBFRRR\nFFBFFFFRLR\nBFBFBFFRRR\nBFBFBBBLRR\nFBBBFFFLRR\nFFBFFFBRRL\nFBBFFFBRLR\nFFFBFFBRLL\nBFBBFFBLLR\nFFBBFBBLRL\nFFBFFFBRLR\nBFBBFFFRLL\nFBBFBBBLLL\nFBBFFFFLLL\nFFBFBBBRRR\nFFFBBBFLRL\nBBFFBBFLRR\nFFFBFFFRLL\nFFBBFBFRRR\nFBFFBFBRRR\nBFFBBFBLRL\nFFFBBBFRLL\nFBBBFFBRRR\nFFBBBBFLRL\nFFBFBBBRRL\nFBFBFFBRRR\nFBFFFBBLLL\nFBBFFFFLRL\nBFFFFBBRLR\nBFBBBBBRLR\nBBFFFBBRRL\nBBFBFBFRLR\nFBFFFFFLLL\nFBFBBBBRRL\nBFBFFFBLRL\nFFFFBBBLLR\nFFBBBFBRLR\nFBBFFFFRRR\nBBFBFFBLRL\nBBFFFFBLRL\nBFBFFBFLRR\nFFFBBBBLRR\nFBBBBBBLRL\nFBBFFBFRRL\nFBFFBBBRRL\nFBFFBBFRRL\nFFFBFBFLLR\nBBFFFFFRLL\nFFFBBBBLLR\nBBFFBBBLRR\nFBFBFFBLLR\nBFBBFBBRLL\nBFFFFFBRLR\nFFFBFBBLRR\nBFFBBBBLLL\nBFFBBFBLLR\nFBBBBBFRLR\nBBFBFFBRLR\nFBFFBFFLLL\nFBBFBBBLLR\nFFFFBBBRRL\nFBBFBBFRLL\nBFBFFFFRLR\nFFFFBBBRLL\nBFBBBFFLLL\nBFBFBFFRLR\nFBFBFFBRLL\nFBBBFFFRLL\nFBFBFFBRLR\nFBBBBFFRLR\nBBFBFFFRLL\nBFFBBBBRLR\nBFBFFFFRRL\nFBBBFFFRRR\nFFBFFBBRLR\nFFBBBBFLRR\nBBFBBFBRRL\nBFFBFFBLLR\nBBFBBFBRLL\nFBFFBFBLLR\nBBFBFBFLLR\nFBFBFBBRLR\nBBFBBFFRRL\nBFBFFFBLLR\nBFBFFBBLLL\nFBFFBFBLRR\nBFBBBBBLLL\nBFFFBFFRRL\nBFBBBFBRLR\nBBFFFBFRLL\nBFFBFFBRLL\nBBFBBFFLLL\nBFBBBBBLRR\nFFFBFFBLLL\nBBFFBBBRLL\nFFFBBBBLRL\nFFBBBFBLLR\nFFBBFFBLRL\nFFBBFFBLRR\nFBBBBBBRLR\nBFFFBBBLLR\nFBBFBFBLRR\nFBFBFBFRLR\nFFBFBBBLRR\nFFFFBBBLRL\nFFFBBFFRLL\nFFFBFFFLRR\nBBFFFFBLLR\nBFBFBFFLLL\nFFBBBFFRLR\nFBBFBFBRLL\nFFBBBFBLLL\nFBBFFFBLLR\nBBFBFFBLRR\nBFFFFBBLLL\nFBBBFBFLLR\nFFBBBFFLRR\nBFFBBBFRRR\nFFBFFFBLRR\nFBBFFBBRLR\nBFBBFBFLRR\nFFFBBFFRRR\nFFBFFFFRLL\nFFFBFBFRRR\nFFBFFFFRRR\nFBBFBBBLRL\nFFFBFBBRLR\nFBBFFFBRLL\nFFBFBFFRLR\nFBBBBFFRRR\nBFBFFBBLRR\nFBFFBBBLRL\nFBBFBBFLLR\nBBFFFFFLRL\nBFBBFBFRLR\nBFFBFFBLRR\nFFBFFFBRLL\nFBFBFFBLLL\nBFFFFFBLLL\nFBFFBBFLLL\nBFBFFBBRLR\nFBFBBFBRLL\nFFBBFBBRLL\nBFFFBBBRLR\nBFFFFFFLRL\nBBFFFBBLLR\nBFBFBBFLRL\nFFBBBFFRRL\nBBFFFBFLLL\nBBFFBBBLLL\nBBFFBFBLLR\nFBFBBBFRLL\nFFBBBBBRRL\nFFBBBFFLLR\nFFBFBBBLRL\nBFFBFFBLRL\nBFFFBFFRRR\nBFBFFFBRRR\nFFFBBBFRLR\nFFBBFBBLLR\nBFFFBBFLRR\nFFBBBBFRRR\nBFBFBBFLRR\nFFFBBBBRRL\nBFBFFBFRLL\nFBFFBFFRLR\nFBBFFFFRLR\nBFBBBBBLRL\nFFBBFBBLLL\nFFBFBBFLLR\nBFFBBBBLRL\nBFBFFFFLRL\nBBFFFBFRRL\nFFBFFBBLRR\nFBFBFBFRRR\nBBFFFBFRLR\nBFBBBFFLRR\nBBFBFFBLLR\nBBFBBFBLLR\nFBFFFBFRLL\nBFBFBBBLLL\nFBBFBFFLRL\nBFFFBBBLRR\nBBFBFFBRRR\nFBBFFFFRLL\nBFFFBBBRRL\nFBBFBBBRRR\nFBBFFBFLLR\nBFFFFFBRRL\nFBFFFFBRLR\nFBFBFBBRRR\nFBFBFBFRLL\nBFFBFFFRRL\nFFFBBFFRRL\nBFBFFFBRLR\nFBBFBFFLRR\nBFFFBFBRRL\nFBFBBBFLLR\nFBFBBBFRRR\nFBFFBFBLRL\nFFFFBBBRRR\nFFBBBFFRRR\nFFFBFBFLLL\nBFBBFFBLRR\nFBBFBFBRRR\nBBFFBBFRRL\nBBFFBFFRRR\nBBFFBFFLRR\nFBBFFBBLRR\nBFBFFFFRRR\nBFFBFBBRLR\nBFFFBBFRLL\nBFBFBBBRLL\nBBFFFBBLRR\nFFBBFBFLRR\nFBFBBBFLLL\nBBFFBBBLLR\nFFBBFFFLRR\nFBFFFBFRRR\nBFBBFBBLLR\nFFBBFBFRLR\nBFBFFFFLLR\nFBBBFBFRRR\nBFBBFBFRRR\nBFFBFBFRRR\nFFBFBBBLLR\nFBFBFFFRLR\nFBBFBFBLLL\nBFFBBFFRLL\nFBBBBFBLLR\nFFFBBBFLLL\nBFBFBBFRLL\nFFFBFBFLRR\nFBBBBFBLLL\nFFBBFBFRLL\nBBFFBBFRRR\nFFBFFBFRLL\nFBFBFBBLLL\nFBFFBBBLLR\nFFFBFBBLRL\nFFFBBFBRRR\nFBFFBFFLRL\nFBBFBFBLLR\nBFBBBBFRLR\nFBBFBFBRLR\nFFFBFFBRRL\nFBFBBFBLLR\nBFFBFFFRLR\nFFBFBFBLRR\nBFBFBBBRRL\nFBFFFFFLRR\nFFFBBFFLLL\nBFFFBBFRLR\nFFBFFBFRLR\nBBFFFFBRLR\nBFFBFFBRLR\nBFBFBFBRLR\nFFBFFBBRLL\nFBBBFFBLLL\nBFBBBBBLLR\nBFFFFBFRLL\nFBBFFFBRRR\nFFFFBBBLLL\nFBFBFBBRRL\nFBFFFFFRLR\nFBFFBBFRRR\nBFFBBFFLRL\nBFBFBBBRRR\nFBBFBFFRLR\nBFFBBFBRRL\nBFBBFBFRRL\nFBFFFBBRRL\nFBBFFBBLLL\nFBFBFBBRLL\nBFFFFBFRRR\nFBBBFFBLLR\nFBBFBBBLRR\nFFBFBFFLLR\nFBFFBFFRLL\nFBBBFFBRLR\nFBFFBBBLLL\nFBFBFBFRRL\nBBFBBFBLLL\nFFBFBFFRRL\nFBBBFFFRRL\nFBFFBBFLRR\nFBFBFFFLLR\nBFFFFBBLRL\nBFBFBFFLRL\nFBFFFFBLLL\nFBBBFFFLRL\nBFFBBBBLLR\nBFFBBBFLLL\nBFFBBFBRRR\nFBBBFBFRLL\nBBFBFFFRRR\nBFBBBFFRLR\nFFBFBFBRRR\nFBFFBBFRLL\nFFFBBBBLLL\nFBFFBFBRRL\nBFFFFFBLLR\nBFBFFFBLLL\nFBFBBBBLLL\nBFFBBFFRRL\nBBFFBFBRRL\nFBBFBFFRRR\nBFBBFFBLLL\nBFBFFBBLRL\nBBFFFFFLLR\nFFBFBBFRLL\nFFBFFBFLLR\nFBBFFBBLRL\nBBFFFFBLLL\nBFFFBFFLLR\nFBFFFBFLLL\nBBFBFBFLLL\nFFBFFBBLRL\nFBFFBBBRLR\nBFFFFBBRRL\nFFBBBBBLLR\nFFBBFBFRRL\nFFBFBBFLRL\nFFBFBFFLRR\nFFFBFFBLLR\nBBFBFBBRLL\nBFBBBBBRRL\nFBFBBBFRLR\nFBFBFFFRLL\nBFFFFFFLLR\nFBBBBFFLLL\nFBBBFFBLRR\nBFFFBFBLRR\nFBBBFFFRLR\nBFFFFFBRLL\nFBBBBFBRRL\nBFBBBFBLRL\nFFBBFBBLRR\nBFFBBFBLLL\nBFBBFFFRRL\nFBBBBFFRRL\nBFFFBBFRRR\nFFFBFFFRRR\nFBFBBFBLRL\nBFBBFFBLRL\nBBFBBFBRLR\nBBFBBFBLRL\nFFBFBFFRRR\nBBFFBBFLLL\nFBBBFFBLRL\nFBBFFBBRRR\nBFFBFBFLLR\nFBFBFBBLRR\nBFFFBBBRRR\nFBBFBFFLLL\nFBFBBFFLRR\nFFBBFFBRLR\nFFBBBBBLRL\nFFBBBFBRRL\nBFBFBFBLRR\nFBFFFFFRLL\nBFBFBBFLLL\nBBFBFBBRRL\nFBFBFBFLLL\nFFBFFBBLLR\nFFFBFFFLLR\nBFFFBFBRLL\nFBBFFBBRLL\nFBBFBFFLLR\nBFFFFBFLLR\nBFFFFFBLRR\nBBFFFBFLRR\nFBFBBFFRLR\nBFBBFBFLLL\nBFFBBBFRLR\nBBFBFBBRLR\nFFBBFBFLLR\nBBFBFBFRRL\nFBFBFBBLRL\nFBFFFBBLRR\nFBFBBFFRRR\nBFFFFBFRLR\nFBFFFBFLLR\nFFBBBFFRLL\nFBFBFFFLRL\nBFFFBBFLLL\nFFFBBFBRLL\nFFBBBFFLLL\nBFBBFBFLLR\nFFBFBBFLLL\nBFFBBBBRRL\nBBFFBBBLRL\nFBFFFFBLRR\nBFBBFBBLRR\nBFBBBFBRRR\nBBFBFFFLLL\nBFFBBFFRLR\nBFFFBFFLRL\nFBBBBFFRLL\nFBFFBBFLLR\nFBFBFFFLLL\nBFFBBFFLRR\nFFBBFBBRRL\nBFBFBBFLLR\nFFFBBFBLRL\nFFBBFFFRRR\nBBFFFBFRRR\nFBBBBFFLRL\nFFFBFBBLLL\nFFFBBFFRLR\nFBFFFBBLRL\nBBFBFBFRLL\nBBFFBBBRLR\nFFFBBFBRLR\nBBFBBFFRLL\nBBFFFFFRLR\nBFBFBFBLLL\nBBFBFFFLLR\nFBFFBFBLLL\nBBFFFBBLLL\nFBFFFFBRLL\nBBFFFFBRLL\nFFBFFFBRRR\nBFFFFFFRLR\nBBFFBBFRLL\nBFBFFFBRRL\nFFBBBBFRLR\nFFBFFBFRRR\nBBFBFBFLRR\nFFBFFBFLRL\nBFBFBFFLLR\nFBBBBBFLLL\nFFBFFFBLLL\nFFBBBFBLRR\nFFFFBBFRRL\nFBFBBBFLRR\nBFFBBFFRRR\nFBFBBBFRRL\nBFFFFFBRRR\nBFBFBBFRRL\nBFBFBFBRLL\nBFBFFFFLLL\nFBBBBBFRRL\nBFBBBBFLRR\nBBFBBFFRRR\nBFFBFFFLLR\nBFBBFBBLLL\nFBFFFFBRRR\nFBFFFBFRLR\nBFFBFBBRLL\nFFBBBFBRRR\nFFBBFFFLLR\nBBFBBFFLLR\nBFBBFFBRLR\nFFFBBFFLRL\nBFFFFFFLLL\nFFBBFFFRLR\nBFFBFBFRLL\nFFBFFBBLLL\nBFFFBFFLRR\nFFBFFFFLRR\nFBBBBFBRLL\nBFBFFBFLLR\nFFBBFFBRRL\nBFFBBFBLRR\nFFBFFBFLRR\nBFFBFBBLLR\nFBBFBBFLLL\nFBFFBBBLRR\nBBFFBFFLLR\nBFBBBFFRRR\nFFFBFFFRRL\nFBBFBBBRRL\nFFFBFBBLLR\nBFFFBFFRLL\nBBFBFFBRRL\nFFBFFFFRRL\nFFBFBFBRLR\nFBBFBFFRLL\nFFFBBFBLLR\nFFFBBBFRRL\nFBBBBBFRLL\nBFFFBBFRRL\nBFBFBFBRRL\nFBBBBFFLRR\nFFFBBFBRRL\nBFFBBFBRLR\nBBFBFBBLLL\nFFBFFFFLLR\nFFBFFFFLRL\nFFFFBBBLRR\nBBFBBFBLRR\nFBBBFBFLRR\nFFFBFBBRLL\nFBFFBBFRLR\nFFBFBBFLRR\nFFFBFBFLRL\nFFFBBBBRLR\nFBBFBBBRLR\nFBFBFFBLRL\nBFBBBBFLRL\nBFFFFBBRRR\nBFFBBBFRRL\nBFFFFBBRLL\nBFBFBFFLRR\nBBFFBFBLRR\nFBBFBBFLRL\nFFFBFFFLLL\nFBBBBFBRRR\nFBFFFBBLLR\nFBBFFBBLLR\nFFBBFFFLLL\nFFBFBFFLLL\nFBFBFBFLRR\nBBFFFBFLLR\nBFFBBBBLRR\nFBBFFFBLRL\nFFFBFFBLRR\nBFBFBFBLLR\nFBFBBFFLRL\nBFBFBFFRLL\nFFBFBBBLLL\nFBFFBBBRRR\nFFBBFFFRRL\nFFBBFBBRRR\nFFBFFFBLRL\nBFBBBFFLRL";

var InvalidLetter = Caml_exceptions.create("Day05.InvalidLetter");

var CannotFindCoord = Caml_exceptions.create("Day05.CannotFindCoord");

function partition(letter, param) {
  var last = param[1];
  var first = param[0];
  var mid = ((last - first | 0) / 2 | 0) + first | 0;
  switch (letter) {
    case "F" :
    case "L" :
        return /* tuple */[
                first,
                mid
              ];
    case "B" :
    case "R" :
        return /* tuple */[
                mid + 1 | 0,
                last
              ];
    default:
      throw [
            InvalidLetter,
            letter
          ];
  }
}

function findCoord(_param, _str) {
  while(true) {
    var param = _param;
    var str = _str;
    var last = param[1];
    var first = param[0];
    if (first === last) {
      return first;
    } else if (str) {
      _str = str[1];
      _param = partition(str[0], /* tuple */[
            first,
            last
          ]);
      continue ;
    } else {
      throw [
            CannotFindCoord,
            /* tuple */[
              first,
              last
            ]
          ];
    }
  };
}

function findSeatPos(str) {
  var row = findCoord(/* tuple */[
        0,
        127
      ], $$Array.to_list(str.substring(0, 7).split("")));
  var col = findCoord(/* tuple */[
        0,
        7
      ], $$Array.to_list(str.substring(7, 10).split("")));
  return /* tuple */[
          row,
          col
        ];
}

var partitioned = findCoord(/* tuple */[
      0,
      127
    ], $$Array.to_list(inputStr.split("")));

var day1 = $$Array.fold_left((function (a, b) {
        if (a > b) {
          return a;
        } else {
          return b;
        }
      }), 0, $$Array.map((function (param) {
            return (param[0] << 3) + param[1] | 0;
          }), $$Array.map(findSeatPos, inputs.split("\n"))));

console.log("Day 1:", day1);

function day2(param) {
  var seatIds = $$Array.map((function (param) {
          return (param[0] << 3) + param[1] | 0;
        }), $$Array.map(findSeatPos, inputs.split("\n")));
  $$Array.sort((function (a, b) {
          return a - b | 0;
        }), seatIds);
  return $$Array.fold_left((function (param, curr) {
                  var prev = param[0];
                  if ((curr - prev | 0) === 2) {
                    return /* tuple */[
                            curr,
                            prev + 1 | 0
                          ];
                  } else {
                    return /* tuple */[
                            curr,
                            param[1]
                          ];
                  }
                }), /* tuple */[
                0,
                0
              ], seatIds)[1];
}

console.log("Day 2:", day2(/* () */0));

exports.inputStr = inputStr;
exports.inputs = inputs;
exports.InvalidLetter = InvalidLetter;
exports.CannotFindCoord = CannotFindCoord;
exports.partition = partition;
exports.findCoord = findCoord;
exports.findSeatPos = findSeatPos;
exports.partitioned = partitioned;
exports.day1 = day1;
exports.day2 = day2;
/* partitioned Not a pure module */
